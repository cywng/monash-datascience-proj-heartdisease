BMI<-round(mean(train.df$BMI),digits=0)
Na<-round(mean(train.df$Na),digits=0)
ui<-shinyUI(fluidPage(
h1("Heart Disease Prediction",align = "center"),#titlePanel
# titlePanel("Heart Disease Prediction"),
br(),
sidebarLayout(
sidebarPanel (
fluidRow(
column(width =6 ,selectInput("Typical.Chest.Pain","Typical.Chest.Pain:",c("",0,1),multiple = F,selected =NULL)),
column(width =6 ,numericInput("Age","Age:",0))),
fluidRow(
column(width =6, selectInput("Atypical","Atypical:",c("",0,1),multiple = F,selected =NULL)), #N,Y
column(width =6,numericInput("FBS","FBS:",0))),
fluidRow(
column(width =6,selectInput("HTN","HTN:",c("",0,1),multiple = F,selected =NULL)),
column(width =6,selectInput("DM","DM:",c("",0,1),multiple = F,selected =NULL))),
fluidRow(
column(width =6,numericInput("EF.TTE","EF.TTE:",0)),
column(width =6,numericInput("K","K:",0))), #float
fluidRow(
column(width =6,numericInput("PR","PR:",0)),
column(width =6,numericInput("ESR","ESR:",0))),
fluidRow(
column(width =6,numericInput("TG","TG:",0)),
column(width =6,selectInput("Tinversion","Tinversion:",c("",0,1),multiple = F,selected =NULL))),
fluidRow(
column(width =6,numericInput("Lymph","Lymph:",0)),
column(width =6,numericInput("Neut","Neut:",0))),
fluidRow(
column(width =6,selectInput("St.Depression","St.Depression:",c("",0,1),multiple = F,selected =NULL)),
column(width =6,selectInput("Dyspnea","Dyspnea:",c("",0,1),multiple = F,selected =NULL))),#N,Y
fluidRow(
column(width =6,selectInput("Nonanginal","Nonanginal:",c("",0,1),multiple = F,selected =NULL)), # N,y
column(width =6,selectInput("Region.RWMA2","Region.RWMA2:",c("",0,1),multiple = F,selected =NULL))),#region,RWAMA:023,
fluidRow(
column(width =6,selectInput("VHD.Mild","VHD.Mild:",c("",0,1),multiple = F,selected =NULL)), #
column(width =6,numericInput("PLT","PLT:",0))),
fluidRow(
column(width =6,numericInput("BMI","BMI:",0)),
column(width =6,numericInput("Na","Na:",0))),
fileInput("file1","Choose a CSV File",accept = ".csv"),
actionButton("button", "Get the result",width = "100%",style="color: #fff; background-color: #337ab7; border-color: #2e6da4"),
#  submitButton("Submit",width = "100%"),
width="100%"),
mainPanel(
textOutput("pred" ),
textOutput("ou1"),
plotOutput("plot"),
tags$head(tags$style("#pred{color: black;
font-size: 20px;
}"
)
)
# plotOutput("map")
)),
))
server <- function(input, output) {
observeEvent(input$button,{
output$pred<-renderPrint({
#    observeEvent(input$button,{
if(is.null(input$file1)){
if(input$Typical.Chest.Pain==""){Typical.Chest.Pain<-round(mean(train.df$Typical.Chest.Pain),digits=0)}
else{Typical.Chest.Pain<-as.numeric(input$Typical.Chest.Pain)}
if(input$Age==0){Age<-round(mean(train.df$Age),digits=0)}
else{Age<-input$Age}
if(input$Atypical==""){Atypical<-round(mean(train.df$Atypical),digits=0)}
else{Atypical<-as.numeric(input$Atypical)}
if(input$FBS==0){FBS<-round(mean(train.df$FBS),digits=0)}
else{FBS<-input$FBS}
if(input$HTN==""){HTN<-round(mean(train.df$HTN),digits=0)}
else{HTN<-as.numeric(input$HTN)}
if(input$DM==""){DM<-round(mean(train.df$DM),digits=0)}
else{DM<-as.numeric(input$DM)}
if(input$EF.TTE==0){EF.TTE<-round(mean(train.df$EF.TTE),digits=0)}
else{EF.TTE<-input$EF.TTE}
if(input$K==0){K<-round(mean(train.df$K),digits=0)}
else{K<-input$K}
if(input$PR==0){PR<-round(mean(train.df$PR),digits=0)}
else{PR<-input$PR}
if(input$ESR==0){ESR<-round(mean(train.df$ESR),digits=0)}
else{ESR<-input$ESR}
if(input$TG==0){TG<-round(mean(train.df$TG),digits=0)}
else{TG<-input$TG}
if(input$Tinversion==""){Tinversion<-round(mean(train.df$Tinversion),digits=0)}
else{Tinversion<-as.numeric(input$Tinversion)}
if(input$Lymph==0){Lymph<-round(mean(train.df$Lymph),digits=0)}
else{Lymph<-input$Lymph}
if(input$Neut==0){Neut<-round(mean(train.df$Neut),digits=0)}
else{Neut<-input$Neut}
if(input$St.Depression==""){St.Depression<-round(mean(train.df$St.Depression),digits=0)}
else{St.Depression<-as.numeric(input$St.Depression)}
if(input$Dyspnea==""){Dyspnea<-round(mean(train.df$Dyspnea),digits=0)}
else{Dyspnea<-as.numeric(input$Dyspnea)}
if(input$Nonanginal==""){Nonanginal<-round(mean(train.df$Nonanginal),digits=0)}
else{Nonanginal<-as.numeric(input$Nonanginal)}
if(input$Region.RWMA2==""){Region.RWMA2<-round(mean(train.df$Region.RWMA2),digits=0)}
else{Region.RWMA2<-as.numeric(input$Region.RWMA2)}
if(input$VHD.Mild==""){VHD.Mild<-round(mean(train.df$VHD.Mild),digits=0)}
else{VHD.Mild<-as.numeric(input$VHD.Mild)}
if(input$PLT==0){PLT<-round(mean(train.df$PLT),digits=0)}
else{PLT<-input$PLT}
if(input$BMI==0){BMI<-round(mean(train.df$BMI),digits=0)}
else{BMI<-input$BMI}
if(input$Na==0){Na<-round(mean(train.df$Na),digits=0)}
else{Na<-input$Na}
new<-data.frame("Typical.Chest.Pain"=Typical.Chest.Pain,"Age"=Age,
"Atypical"=Atypical,"FBS"=FBS,"HTN"=HTN,
"DM"=DM,"EF.TTE"=EF.TTE, "K"=K,"PR"=PR,"ESR"=ESR,
"TG"=TG,"Tinversion"=Tinversion,"Lymph"=Lymph,"Neut"=Neut,
"St.Depression"=St.Depression,"Dyspnea"=Dyspnea,"Nonanginal"=Nonanginal,
"Region.RWMA2"=Region.RWMA2,"VHD.Mild"=VHD.Mild,"PLT"=PLT,"BMI"=BMI,"Na"=Na)
pr=predict(lda.model,new)
cat("The case has CAD with:",pr,type="prob")$Y
}
else{
file<-input$file1
ext <- tools::file_ext(file$datapath)
req(file)
validate(need(ext == "csv", "Please upload a csv file"))
file<-read.csv(file$datapath)
#_-----
load(file = "DataWrangling/caddata.RData")
if(is.null(file$Typical.Chest.Pain)){Typical.Chest.Pain<-round(mean(train.df$Typical.Chest.Pain),digits=0)}
else{Typical.Chest.Pain<-file$Typical.Chest.Pain}
if(is.null(file$Age)){Age<-round(mean(train.df$Age),digits=0)}
else{Age<-file$Age}
if(is.null(file$Atypical)){Atypical<-round(mean(train.df$Atypical),digits=0)}
else{Atypical<-file$Atypical}
if(is.null(file$FBS)){FBS<-round(mean(train.df$FBS),digits=0)}
else{FBS<-file$FBS}
if(is.null(file$HTN)){HTN<-round(mean(train.df$HTN),digits=0)}
else{HTN<-file$HTN}
if(is.null(file$DM)){DM<-round(mean(train.df$DM),digits=0)}
else{DM<-file$DM}
----
if(is.null(file$EF.TTE)){EF.TTE<-round(mean(train.df$EF.TTE),digits=0)}
else{EF.TTE<-file$EF.TTE}
if(is.null(file$K)){K<-round(mean(train.df$K),digits=0)}
else{K<-file$K}
if(is.null(file$PR)){PR<-round(mean(train.df$PR),digits=0)}
else{PR<-file$PR}
if(is.null(file$ESR)){ESR<-round(mean(train.df$ESR),digits=0)}
else{ESR<-file$ESR}
if(is.null(file$TG)){TG<-round(mean(train.df$TG),digits=0)}
else{TG<-file$TG}
if(is.null(file$Tinversion)){Tinversion<-round(mean(train.df$Tinversion),digits=0)}
else{Tinversion<-file$Tinversion}
if(is.null(file$Lymph)){Lymph<-round(mean(train.df$Lymph),digits=0)}
else{Lymph<-file$Lymph}
if(is.null(file$Neut)){Neut<-round(mean(train.df$Neut),digits=0)}
else{Neut<-file$Neut}
if(is.null(file$St.Depression)){St.Depression<-round(mean(train.df$St.Depression),digits=0)}
else{St.Depression<-file$St.Depression}
if(is.null(file$Dyspnea)){Dyspnea<-round(mean(train.df$Dyspnea),digits=0)}
else{Dyspnea<-file$Dyspnea}
if(is.null(file$Nonanginal)){Nonanginal<-round(mean(train.df$Nonanginal),digits=0)}
else{Nonanginal<-file$Nonanginal}
if(is.null(file$Region.RWMA2)){Region.RWMA2<-round(mean(train.df$Region.RWMA2),digits=0)}
else{Region.RWMA2<-file$Region.RWMA2}
if(is.null(file$VHD.Mild)){VHD.Mild<-round(mean(train.df$VHD.Mild),digits=0)}
else{VHD.Mild<-file$VHD.Mild}
if(is.null(file$PLT)){PLT<-round(mean(train.df$PLT),digits=0)}
else{PLT<-file$PLT}
if(is.null(file$BMI)){BMI<-round(mean(train.df$BMI),digits=0)}
else{BMI<-file$BMI}
if(is.null(file$Na)){Na<-round(mean(train.df$Na),digits=0)}
else{Na<-file$Na}
#-------
new2<-data.frame("Typical.Chest.Pain"=Typical.Chest.Pain,"Age"=Age,
"Atypical"=Atypical,"FBS"=FBS,"HTN"=HTN,
"DM"=DM,"EF.TTE"=EF.TTE, "K"=K,"PR"=PR,"ESR"=ESR,
"TG"=TG,"Tinversion"=Tinversion,"Lymph"=Lymph,"Neut"=Neut,
"St.Depression"=St.Depression,"Dyspnea"=Dyspnea,"Nonanginal"=Nonanginal,
"Region.RWMA2"=Region.RWMA2,"VHD.Mild"=VHD.Mild,"PLT"=PLT,"BMI"=BMI,"Na"=Na)
pr=predict(lda.model,new2,type="prob")$Y
# if(pr=="N"){cat("The reault is: NORMAL")}else if (pr=="Y"){cat("The reault is: CAD")}
cat("The case has CAD with confidence: ",pr)
}
})
})
}
app<- shinyApp(ui, server)
library(rsconnect)
rsconnect::deployApp()
FROM
setwd("~/Uni/2020/DataScienceProject/monash-datascience-proj-heartdisease/website/Test Host")
setwd("~/Uni/2020/DataScienceProject/monash-datascience-proj-heartdisease/website/Test Host")
library(rsconnect)
deployApp()
library(shiny)
library(Hmisc)
load(file = "LDAmodel.RData")
load(file = "caddata.RData")
library(shiny)
library(Hmisc)
load(file = "Models/LDAmodel.RData")
load(file = "DataWrangling/caddata.RData")
rm(list=ls())
load(file = "LDAmodel.RData")
load(file = "caddata.RData")
Age<-round(mean(train.df$Age),digits=0)
load(file = "Featuresselected.RData")
deployApp()
setwd("~/Uni/2020/DataScienceProject/monash-datascience-proj-heartdisease/website/FIT3164team1cadprediction")
library(rsconnect)
deployApp()
runApp()
library(shiny)
runApp()
runApp()
round(pi)
round(pi,2)
runApp()
deployApp()
setwd("~/Uni/2020/DataScienceProject/monash-datascience-proj-heartdisease/website/FIT3164team1cadprediction")
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
deployApp()
deployApp()
runApp()
1==1 || 0==1
1==2 || 0==1
1==2 || 1==1
setwd("~/Uni/2020/DataScienceProject/monash-datascience-proj-heartdisease/website/FIT3164team1cadprediction")
library(shiny)
shinyApp()
buildApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?tryCatch
?errorCondition
log(0)
log("a")
tryCatch(res=log("y"))
tryCatch(res=log("y"), error=cat("error"))
stop(3)
tryCatch(1, finally = print("Hello"))
e <- simpleError("test error")
stop(e)
tryCatch(stop(e), finally = print("Hello"))
tryCatch(stop("fred"), finally = print("Hello"))
tryCatch(expr={res=log("y")}, error=cat("error"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
try(log("a"))
try({ret=log("a");print(ret)})
try({ret=log("a");print(ret)},silent=TRUE)
try({ret=log(4);print(ret)},silent=TRUE)
runApp()
runApp()
runApp()
?selectInput
?numericInput
runApp()
runApp()
runApp()
library(rsconnet)
library(rsconnect)
deployApp()
runApp()
deployApp()
library(plumber)
r <- plumb("./API/plumber_api.R")
r$run(port = 8000)
setwd("~/Uni/2020/DataScienceProject/monash-datascience-proj-heartdisease/website/FIT3164team1cadprediction")
setwd("~/Uni/2020/DataScienceProject/monash-datascience-proj-heartdisease")
library(plumber)
r <- plumb("./API/plumber_api.R")
r$run(port = 8000)
# we can access it via *http://localhost:8000/predict*, but requires an input
# in a JSON format.
library(plumber)
r <- plumb("./API/plumber_api.R")
r$run(port = 8000)
library(plumber)
r <- plumb("./API/plumber_api.R")
r$run(port = 8000)
library(plumber)
r <- plumb("./API/plumber_api.R")
r$run(port = 8000)
# we can access it via *http://localhost:8000/predict*, but requires an input
# in a JSON format.
# Here is one we prepared earlier:
#positive:
#{"Typical.Chest.Pain":1,"Age":67,"Atypical":0,"FBS":80,"HTN":1,"DM":0,"EF.TTE":40,"K":4.7,"PR":80,"ESR":26,"TG":309,"Tinversion":1,"Lymph":38,"Neut":55,"St.Depression":1,"Dyspnea":0,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":165,"BMI":28.3987180007303,"Na":156}
#negative
#{"Typical.Chest.Pain":0,"Age":53,"Atypical":0,"FBS":84,"HTN":0,"DM":0,"EF.TTE":55,"K":3.9,"PR":100,"ESR":17,"TG":75,"Tinversion":0,"Lymph":31,"Neut":60,"St.Depression":0,"Dyspnea":1,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":261,"BMI":25.7210322145387,"Na":140}
#Paste the following line into r terminal (next to consle)
#Positive case:
#curl -H "Content-Type: application/json" -X GET -d '{"Typical.Chest.Pain":1,"Age":67,"Atypical":0,"FBS":80,"HTN":1,"DM":0,"EF.TTE":40,"K":4.7,"PR":80,"ESR":26,"TG":309,"Tinversion":1,"Lymph":38,"Neut":55,"St.Depression":1,"Dyspnea":0,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":165,"BMI":28.3987180007303,"Na":156}' "http://localhost:8000/predict"
#negative case:
#curl -H "Content-Type: application/json" -X GET -d '{"Typical.Chest.Pain":0,"Age":53,"Atypical":0,"FBS":84,"HTN":0,"DM":0,"EF.TTE":55,"K":3.9,"PR":100,"ESR":17,"TG":75,"Tinversion":0,"Lymph":31,"Neut":60,"St.Depression":0,"Dyspnea":1,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":261,"BMI":25.7210322145387,"Na":140}' "http://localhost:8000/predict"
setwd("~/Uni/2020/DataScienceProject/monash-datascience-proj-heartdisease")
load(file = "svm_linear.RData")
svm.l$perfNames
svm.l$coefnames
setwd("~/Uni/2020/DataScienceProject/monash-datascience-proj-heartdisease/website/FIT3164team1cadprediction")
runApp()
runApp()
runApp()
svm.l$terms
load(file="svm_train_data.RData")
svm.train[1,]
predict(svm.l,svm.train[1,],type = "prob")
predict(svm.l,svm.train[1,],type = "prob")$Cad
library(plumber)
r <- plumb("./API/plumber_api.R")
r$run(port = 8000)
# we can access it via *http://localhost:8000/predict*, but requires an input
# in a JSON format.
# Here is one we prepared earlier:
#positive:
#{"Typical.Chest.Pain":1,"Age":67,"Atypical":0,"FBS":80,"HTN":1,"DM":0,"EF.TTE":40,"K":4.7,"PR":80,"ESR":26,"TG":309,"Tinversion":1,"Lymph":38,"Neut":55,"St.Depression":1,"Dyspnea":0,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":165,"BMI":28.3987180007303,"Na":156}
#negative
#{"Typical.Chest.Pain":0,"Age":53,"Atypical":0,"FBS":84,"HTN":0,"DM":0,"EF.TTE":55,"K":3.9,"PR":100,"ESR":17,"TG":75,"Tinversion":0,"Lymph":31,"Neut":60,"St.Depression":0,"Dyspnea":1,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":261,"BMI":25.7210322145387,"Na":140}
#Paste the following line into r terminal (next to consle)
#Positive case:
#curl -H "Content-Type: application/json" -X GET -d '{"Typical.Chest.Pain":1,"Age":67,"Atypical":0,"FBS":80,"HTN":1,"DM":0,"EF.TTE":40,"K":4.7,"PR":80,"ESR":26,"TG":309,"Tinversion":1,"Lymph":38,"Neut":55,"St.Depression":1,"Dyspnea":0,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":165,"BMI":28.3987180007303,"Na":156}' "http://localhost:8000/predict"
#negative case:
#curl -H "Content-Type: application/json" -X GET -d '{"Typical.Chest.Pain":0,"Age":53,"Atypical":0,"FBS":84,"HTN":0,"DM":0,"EF.TTE":55,"K":3.9,"PR":100,"ESR":17,"TG":75,"Tinversion":0,"Lymph":31,"Neut":60,"St.Depression":0,"Dyspnea":1,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":261,"BMI":25.7210322145387,"Na":140}' "http://localhost:8000/predict"
setwd("~/Uni/2020/DataScienceProject/monash-datascience-proj-heartdisease")
library(plumber)
r <- plumb("./API/plumber_api.R")
r$run(port = 8000)
library(plumber)
r <- plumb("./API/plumber_api.R")
r$run(port = 8000)
library(plumber)
r <- plumb("./API/plumber_api.R")
r$run(port = 8000)
library(plumber)
r <- plumb("./API/plumber_api.R")
r$run(port = 8000)
library(plumber)
r <- plumb("./API/plumber_api.R")
r$run(port = 8000)
library(plumber)
r <- plumb("./API/plumber_api.R")
r$run(port = 8000)
test=data.frame(1,2,3,4,5)
test
resr2=data.frame(2,3,4)
test+resr2
c(test,resr2)
data.frame(c(test,resr2))
as.data.frame(t(sapply(test, as.numeric)))
test2=as.data.frame(t(sapply(resr2, as.factor)))
test2
test2=as.data.frame(t(lapply(resr2, as.factor)))
test2
test1=data.frame(1,2,3)
test1
lapply(test1,as.factor())
lapply(test1,as.factor(x))
lapply(test1,as.factor
)
lapply(test1,as.factor)
restest=lapply(test1,as.factor)
restest
str(restest)
library(plumber)
r <- plumb("./API/plumber_api.R")
r$run(port = 8000)
# we can access it via *http://localhost:8000/predict*, but requires an input
# in a JSON format.
# Here is one we prepared earlier:
#positive:
#{"Typical.Chest.Pain":1,"Age":67,"Atypical":0,"FBS":80,"HTN":1,"DM":0,"EF.TTE":40,"K":4.7,"PR":80,"ESR":26,"TG":309,"Tinversion":1,"Lymph":38,"Neut":55,"St.Depression":1,"Dyspnea":0,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":165,"BMI":28.3987180007303,"Na":156}
#negative
#{"Typical.Chest.Pain":0,"Age":53,"Atypical":0,"FBS":84,"HTN":0,"DM":0,"EF.TTE":55,"K":3.9,"PR":100,"ESR":17,"TG":75,"Tinversion":0,"Lymph":31,"Neut":60,"St.Depression":0,"Dyspnea":1,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":261,"BMI":25.7210322145387,"Na":140}
#Paste the following line into r terminal (next to consle)
#Positive case:
#curl -H "Content-Type: application/json" -X GET -d '{"Typical.Chest.Pain":1,"Age":67,"Atypical":0,"FBS":80,"HTN":1,"DM":0,"EF.TTE":40,"K":4.7,"PR":80,"ESR":26,"TG":309,"Tinversion":1,"Lymph":38,"Neut":55,"St.Depression":1,"Dyspnea":0,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":165,"BMI":28.3987180007303,"Na":156}' "http://localhost:8000/predict"
#negative case:
#curl -H "Content-Type: application/json" -X GET -d '{"Typical.Chest.Pain":0,"Age":53,"Atypical":0,"FBS":84,"HTN":0,"DM":0,"EF.TTE":55,"K":3.9,"PR":100,"ESR":17,"TG":75,"Tinversion":0,"Lymph":31,"Neut":60,"St.Depression":0,"Dyspnea":1,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":261,"BMI":25.7210322145387,"Na":140}' "http://localhost:8000/predict"
library(plumber)
r <- plumb("./API/plumber_api.R")
r$run(port = 8000)
# we can access it via *http://localhost:8000/predict*, but requires an input
# in a JSON format.
# Here is one we prepared earlier:
#positive:
#{"Typical.Chest.Pain":1,"Age":67,"Atypical":0,"FBS":80,"HTN":1,"DM":0,"EF.TTE":40,"K":4.7,"PR":80,"ESR":26,"TG":309,"Tinversion":1,"Lymph":38,"Neut":55,"St.Depression":1,"Dyspnea":0,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":165,"BMI":28.3987180007303,"Na":156}
#negative
#{"Typical.Chest.Pain":0,"Age":53,"Atypical":0,"FBS":84,"HTN":0,"DM":0,"EF.TTE":55,"K":3.9,"PR":100,"ESR":17,"TG":75,"Tinversion":0,"Lymph":31,"Neut":60,"St.Depression":0,"Dyspnea":1,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":261,"BMI":25.7210322145387,"Na":140}
#Paste the following line into r terminal (next to consle)
#Positive case:
#curl -H "Content-Type: application/json" -X GET -d '{"Typical.Chest.Pain":1,"Age":67,"Atypical":0,"FBS":80,"HTN":1,"DM":0,"EF.TTE":40,"K":4.7,"PR":80,"ESR":26,"TG":309,"Tinversion":1,"Lymph":38,"Neut":55,"St.Depression":1,"Dyspnea":0,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":165,"BMI":28.3987180007303,"Na":156}' "http://localhost:8000/predict"
#negative case:
#curl -H "Content-Type: application/json" -X GET -d '{"Typical.Chest.Pain":0,"Age":53,"Atypical":0,"FBS":84,"HTN":0,"DM":0,"EF.TTE":55,"K":3.9,"PR":100,"ESR":17,"TG":75,"Tinversion":0,"Lymph":31,"Neut":60,"St.Depression":0,"Dyspnea":1,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":261,"BMI":25.7210322145387,"Na":140}' "http://localhost:8000/predict"
head(svm.train)
library(plumber)
r <- plumb("./API/plumber_api.R")
r$run(port = 8000)
# we can access it via *http://localhost:8000/predict*, but requires an input
# in a JSON format.
# Here is one we prepared earlier:
#positive:
#{"Typical.Chest.Pain":1,"Age":67,"Atypical":0,"FBS":80,"HTN":1,"DM":0,"EF.TTE":40,"K":4.7,"PR":80,"ESR":26,"TG":309,"Tinversion":1,"Lymph":38,"Neut":55,"St.Depression":1,"Dyspnea":0,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":165,"BMI":28.3987180007303,"Na":156}
#negative
#{"Typical.Chest.Pain":0,"Age":53,"Atypical":0,"FBS":84,"HTN":0,"DM":0,"EF.TTE":55,"K":3.9,"PR":100,"ESR":17,"TG":75,"Tinversion":0,"Lymph":31,"Neut":60,"St.Depression":0,"Dyspnea":1,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":261,"BMI":25.7210322145387,"Na":140}
#Paste the following line into r terminal (next to consle)
#Positive case:
#curl -H "Content-Type: application/json" -X GET -d '{"Typical.Chest.Pain":1,"Age":67,"Atypical":0,"FBS":80,"HTN":1,"DM":0,"EF.TTE":40,"K":4.7,"PR":80,"ESR":26,"TG":309,"Tinversion":1,"Lymph":38,"Neut":55,"St.Depression":1,"Dyspnea":0,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":165,"BMI":28.3987180007303,"Na":156}' "http://localhost:8000/predict"
#negative case:
#curl -H "Content-Type: application/json" -X GET -d '{"Typical.Chest.Pain":0,"Age":53,"Atypical":0,"FBS":84,"HTN":0,"DM":0,"EF.TTE":55,"K":3.9,"PR":100,"ESR":17,"TG":75,"Tinversion":0,"Lymph":31,"Neut":60,"St.Depression":0,"Dyspnea":1,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":261,"BMI":25.7210322145387,"Na":140}' "http://localhost:8000/predict"
#==== convert to json ====
input_data_pos = svm.train[1,][svm.l$finalModel$xNames]
svm.l$finalModel
svm.l$coefnames
#==== convert to json ====
input_data_pos = svm.train[1,][svm.l$coefnames]
svm.train[1,]
head(svm.train,10)
input_data_pos = svm.train[1,]
input_data_neg = test.df[3,]
library(rjson)
test_case_json <- toJSON(input_data_neg)
cat(test_case_json)
input_data_neg = svm.train[3,]
test_case_json <- toJSON(input_data_neg)
cat(test_case_json)
test_case_json <- toJSON(input_data_pos)
cat(test_case_json)
library(plumber)
r <- plumb("./API/plumber_api.R")
r$run(port = 8000)
# we can access it via *http://localhost:8000/predict*, but requires an input
# in a JSON format.
# Here is one we prepared earlier:
#positive:
#{"Typical.Chest.Pain":1,"Age":67,"Atypical":0,"FBS":80,"HTN":1,"DM":0,"EF.TTE":40,"K":4.7,"PR":80,"ESR":26,"TG":309,"Tinversion":1,"Lymph":38,"Neut":55,"St.Depression":1,"Dyspnea":0,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":165,"BMI":28.3987180007303,"Na":156}
#negative
#{"Typical.Chest.Pain":0,"Age":53,"Atypical":0,"FBS":84,"HTN":0,"DM":0,"EF.TTE":55,"K":3.9,"PR":100,"ESR":17,"TG":75,"Tinversion":0,"Lymph":31,"Neut":60,"St.Depression":0,"Dyspnea":1,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":261,"BMI":25.7210322145387,"Na":140}
#Paste the following line into r terminal (next to consle)
#Positive case:
#curl -X GET "http://127.0.0.1:8000/predict?Typical.Chest.Pain=1&Age=61&Atypical=0&FBS=80&HTN=1&DM=1&EF.TTE=40&K=4.7&ESR=11&TG=100&Region.RWMA=3&BP=130" -H "accept: */*"
#curl -H "Content-Type: application/json" -X GET -d '{"Age":53,"DM":"0","HTN":"1","BP":110,"Typical.Chest.Pain":"0","Atypical":"N","FBS":90,"TG":250,"ESR":7,"K":4.7,"EF.TTE":50,"Region.RWMA":"0"}' "http://localhost:8000/predict"
#negative case:
#curl -H "Content-Type: application/json" -X GET -d '{"Age":66,"DM":"0","HTN":"1","BP":100,"Typical.Chest.Pain":"0","Atypical":"N","FBS":78,"TG":63,"ESR":76,"K":4.4,"EF.TTE":55,"Region.RWMA":"0"}' "http://localhost:8000/predict"
predict(svm.l,input_data_neg,type = "prob")$Cad
predict(svm.l,input_data_pos,type = "prob")$Cad
head(svm.train,10)
predict(svm.l,svm.train[4,],type = "prob")$Cad
predict(svm.l,svm.train[6,],type = "prob")$Cad
predict(svm.l,svm.train[7,],type = "prob")$Cad
predict(svm.l,svm.train[5,],type = "prob")$Cad
svm.train[6,]
input_data_neg = svm.train[6,]
test_case_json <- toJSON(input_data_neg)
cat(test_case_json)
library(plumber)
r <- plumb("./API/plumber_api.R")
r$run(port = 8000)
library(plumber)
r <- plumb("./API/plumber_api.R")
r$run(port = 8000)
# we can access it via *http://localhost:8000/predict*, but requires an input
# in a JSON format.
# Here is one we prepared earlier:
#positive:
#{"Typical.Chest.Pain":1,"Age":67,"Atypical":0,"FBS":80,"HTN":1,"DM":0,"EF.TTE":40,"K":4.7,"PR":80,"ESR":26,"TG":309,"Tinversion":1,"Lymph":38,"Neut":55,"St.Depression":1,"Dyspnea":0,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":165,"BMI":28.3987180007303,"Na":156}
#negative
#{"Typical.Chest.Pain":0,"Age":53,"Atypical":0,"FBS":84,"HTN":0,"DM":0,"EF.TTE":55,"K":3.9,"PR":100,"ESR":17,"TG":75,"Tinversion":0,"Lymph":31,"Neut":60,"St.Depression":0,"Dyspnea":1,"Nonanginal":0,"Region.RWMA2":0,"VHD.Mild":0,"PLT":261,"BMI":25.7210322145387,"Na":140}
#Paste the following line into r terminal (next to consle)
#Positive case:
#curl -H "Content-Type: application/json" -X GET -d '{"Age":53,"DM":"0","HTN":"1","BP":110,"Typical.Chest.Pain":"0","Atypical":"N","FBS":90,"TG":250,"ESR":7,"K":4.7,"EF.TTE":50,"Region.RWMA":"0"}' "http://localhost:8000/predict"
#negative case:
#curl -H "Content-Type: application/json" -X GET -d '{"Age":58,"DM":"0","HTN":"0","BP":90,"Typical.Chest.Pain":"0","Atypical":"N","FBS":69,"TG":79,"ESR":5,"K":3.4,"EF.TTE":50,"Region.RWMA":"0"}' "http://localhost:8000/predict"
mode(c(1,2,3,4,5,5,5))
(c(1,2,3,4,5,5,5))
rm(list=ls())
setwd("~/Uni/2020/DataScienceProject/monash-datascience-proj-heartdisease/website/FIT3164team1cadprediction")
library(shiny)
runApp()
runApp()
runApp()
library(rsconnect)
deployApp()
runApp()
deployApp()
deployApp()
deployApp()
setwd("~/Uni/2020/DataScienceProject/monash-datascience-proj-heartdisease/website/FIT3164team1cadprediction")
library(shiny)
runApp()
deployApp()
library(kernlab)
deployApp()
